{"version":3,"sources":["components/InputTodo.jsx","components/IncompleteTodos.jsx","components/CompleteTodos.jsx","App.jsx","index.js"],"names":["InputTodo","props","todoText","onChange","onClick","React","createElement","className","placeholder","value","IncompleteTodos","todos","onClickComplete","onClickDelete","map","todo","index","key","CompleteTODOs","onClickBack","App","_useState","useState","_useState2","_slicedToArray","setTodoText","_useState3","_useState4","incompleteTODOs","setIncompleteTODOs","_useState5","_useState6","completeTODOs","setCompleteTODOs","console","log","Fragment","event","target","newTodos","concat","_toConsumableArray","newIncompleteTodos","splice","newCompleteTodos","ReactDOM","render","document","getElementById"],"mappings":"+LAEaA,G,MAAY,SAACC,GACxB,IAAQC,EAAgCD,EAAhCC,SAAUC,EAAsBF,EAAtBE,SAAUC,EAAYH,EAAZG,QAC5B,OACEC,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,SAAOE,YAAY,yBAAUC,MAAOP,EAAUC,SAAUA,IACxDE,IAAAC,cAAA,UAAQF,QAASA,GAAS,mBCLnBM,EAAkB,SAACT,GAC9B,IAAQU,EAA0CV,EAA1CU,MAAOC,EAAmCX,EAAnCW,gBAAiBC,EAAkBZ,EAAlBY,cAChC,OACER,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,KAAGC,UAAU,SAAQ,gCACrBF,IAAAC,cAAA,UACGK,EAAMG,KAAI,SAACC,EAAMC,GAChB,OACEX,IAAAC,cAAA,OAAKW,IAAKF,EAAMR,UAAU,YACxBF,IAAAC,cAAA,UAAKS,GACLV,IAAAC,cAAA,UAAQF,QAAS,kBAAMQ,EAAgBI,KAAQ,gBAC/CX,IAAAC,cAAA,UAAQF,QAAS,kBAAMS,EAAcG,KAAQ,uBCX9CE,EAAgB,SAACjB,GAC5B,IAAQU,EAAuBV,EAAvBU,MAAOQ,EAAgBlB,EAAhBkB,YACf,OACEd,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,KAAGC,UAAU,SAAQ,gCACrBF,IAAAC,cAAA,UACGK,EAAMG,KAAI,SAACC,EAAMC,GAChB,OACEX,IAAAC,cAAA,OAAKW,IAAKF,EAAMR,UAAU,YACxBF,IAAAC,cAAA,UAAKS,GACLV,IAAAC,cAAA,UAAQF,QAAS,kBAAMe,EAAYH,KAAQ,uBCN5CI,EAAM,WACjB,IAAAC,EAAgCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAArCnB,EAAQqB,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,EAA8CJ,mBAAS,IAAGK,EAAAH,YAAAE,EAAA,GAAnDE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAC1CG,EAA0CR,mBAAS,IAAGS,EAAAP,YAAAM,EAAA,GAA/CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GA8BtC,OAFAG,QAAQC,IAAI,GAGV9B,IAAAC,cAAAD,IAAA+B,SAAA,KACE/B,IAAAC,cAACN,EAAS,CACRE,SAAUA,EACVC,SAjCmB,SAACkC,GAAK,OAAKZ,EAAYY,EAAMC,OAAO7B,QAkCvDL,QAjCa,WACjB,GAAiB,KAAbF,EAAJ,CACA,IAAMqC,EAAQ,GAAAC,OAAAC,YAAOb,GAAe,CAAE1B,IACtC2B,EAAmBU,GACnBd,EAAY,QAwCVpB,IAAAC,cAACI,EAAe,CACdC,MAAOiB,EACPhB,gBAnCkB,SAACI,GACvB,IAAM0B,EAAkBD,YAAOb,GAC/Bc,EAAmBC,OAAO3B,EAAO,GACjC,IAAM4B,EAAgB,GAAAJ,OAAAC,YAAOT,GAAa,CAAEJ,EAAgBZ,KAC5Da,EAAmBa,GACnBT,EAAiBW,IA+Bb/B,cAzCgB,SAACG,GACrB,IAAMuB,EAAQE,YAAOb,GACrBW,EAASI,OAAO3B,EAAO,GACvBa,EAAmBU,MAuDjBlC,IAAAC,cAACY,EAAa,CAACP,MAAOqB,EAAeb,YA9CrB,SAACH,GACnB,IAAM4B,EAAgBH,YAAOT,GAC7BY,EAAiBD,OAAO3B,EAAO,GAC/B,IAAM0B,EAAkB,GAAAF,OAAAC,YAAOb,GAAe,CAAEI,EAAchB,KAC9DiB,EAAiBW,GACjBf,EAAmBa,QC7BvBG,IAASC,OAAOzC,IAAAC,cAACc,EAAG,MAAK2B,SAASC,eAAe,U","file":"static/js/main.5c274c49.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const InputTodo = (props) => {\n  const { todoText, onChange, onClick } = props;\n  return (\n    <div className=\"input-area\">\n      <input placeholder=\"TODOを入力\" value={todoText} onChange={onChange} />\n      <button onClick={onClick}>追加</button>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const IncompleteTodos = (props) => {\n  const { todos, onClickComplete, onClickDelete } = props;\n  return (\n    <div className=\"incomplete-area\">\n      <p className=\"title\">未完了のTODO</p>\n      <ul>\n        {todos.map((todo, index) => {\n          return (\n            <div key={todo} className=\"list-row\">\n              <li>{todo}</li>\n              <button onClick={() => onClickComplete(index)}>完了</button>\n              <button onClick={() => onClickDelete(index)}>削除</button>\n            </div>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const CompleteTODOs = (props) => {\n  const { todos, onClickBack } = props;\n  return (\n    <div className=\"complete-area\">\n      <p className=\"title\">完了済のTODO</p>\n      <ul>\n        {todos.map((todo, index) => {\n          return (\n            <div key={todo} className=\"list-row\">\n              <li>{todo}</li>\n              <button onClick={() => onClickBack(index)}>戻す</button>\n            </div>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport \"./styles.css\";\nimport { InputTodo } from \"./components/InputTodo.jsx\";\nimport { IncompleteTodos } from \"./components/IncompleteTodos\";\nimport { CompleteTODOs } from \"./components/CompleteTodos\";\n\nexport const App = () => {\n  const [todoText, setTodoText] = useState(\"\");\n  const [incompleteTODOs, setIncompleteTODOs] = useState([]);\n  const [completeTODOs, setCompleteTODOs] = useState([]);\n  const onChangeTodoText = (event) => setTodoText(event.target.value);\n  const onClickAdd = () => {\n    if (todoText === \"\") return;\n    const newTodos = [...incompleteTODOs, todoText];\n    setIncompleteTODOs(newTodos);\n    setTodoText(\"\");\n  };\n  const onClickDelete = (index) => {\n    const newTodos = [...incompleteTODOs];\n    newTodos.splice(index, 1);\n    setIncompleteTODOs(newTodos);\n  };\n  const onClickComplete = (index) => {\n    const newIncompleteTodos = [...incompleteTODOs];\n    newIncompleteTodos.splice(index, 1);\n    const newCompleteTodos = [...completeTODOs, incompleteTODOs[index]];\n    setIncompleteTODOs(newIncompleteTodos);\n    setCompleteTODOs(newCompleteTodos);\n  };\n  const onClickBack = (index) => {\n    const newCompleteTodos = [...completeTODOs];\n    newCompleteTodos.splice(index, 1);\n    const newIncompleteTodos = [...incompleteTODOs, completeTODOs[index]];\n    setCompleteTODOs(newCompleteTodos);\n    setIncompleteTODOs(newIncompleteTodos);\n  };\n\n  console.log(8);\n\n  return (\n    <>\n      <InputTodo\n        todoText={todoText}\n        onChange={onChangeTodoText}\n        onClick={onClickAdd}\n      />\n      {/* <div className=\"input-area\">\n        <input\n          placeholder=\"TODOを入力\"\n          value={todoText}\n          onChange={onChangeTodoText}\n        />\n        <button onClick={onClickAdd}>追加</button>\n      </div> */}\n\n      <IncompleteTodos\n        todos={incompleteTODOs}\n        onClickComplete={onClickComplete}\n        onClickDelete={onClickDelete}\n      />\n      {/* <div className=\"incomplete-area\">\n        <p className=\"title\">未完了のTODO</p>\n        <ul>\n          {incompleteTODOs.map((todo, index) => {\n            return (\n              <div key={todo} className=\"list-row\">\n                <li>{todo}</li>\n                <button onClick={() => onClickComplete(index)}>完了</button>\n                <button onClick={() => onClickDelete(index)}>削除</button>\n              </div>\n            );\n          })}\n        </ul>\n      </div> */}\n\n      <CompleteTODOs todos={completeTODOs} onClickBack={onClickBack} />\n      {/* <div className=\"complete-area\">\n        <p className=\"title\">完了済のTODO</p>\n        <ul>\n          {completeTODOs.map((todo, index) => {\n            return (\n              <div key={todo} className=\"list-row\">\n                <li>{todo}</li>\n                <button onClick={() => onClickBack(index)}>戻す</button>\n              </div>\n            );\n          })}\n        </ul>\n      </div> */}\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}